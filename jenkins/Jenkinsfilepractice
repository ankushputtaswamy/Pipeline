pipeline {
agent any
        parameters {
        choice choices: ['BUILD', 'TESTING' , 'DEPLOY'], name: 'STAGES'
        string defaultValue: 'main', name: 'BRANCH', trim: true
        }

        environment {
        branch = "${BRANCH}"
        }

    stages {
        stage('BUILD') {
            when {
                expression{ params.STAGES == 'BUILD'}
                branch 'main'
            }
            steps {
                catchError(buildResult: 'SUCCESS' , stageResult: 'FAILURE') {
                    sh '''
                    echo "This is BUILD Stage"
                    '''
                }
            }
        }
        stage('TESTING') {
            when {
                expression{ params.STAGES == 'TESTING'}
                branch 'main'
            }
            parallel {
                stage('TESTING IN WINDOWS MACHINE') {
                    steps{
                        catchError(buildResult: 'SUCCESS' , stageResult: 'FAILURE') {
                        sh '''
                        echo "This is Testing stage in WINDOWS Machine"
                        '''
                        }
                    }
                }
                stage('TESTING IN LINUX MACHINE') {
                    steps{
                        catchError(buildResult: 'SUCCESS' , stageResult: 'FAILURE') {
                        sh '''
                        echo "This is Testing stage in LINUX Machine"
                        '''
                        }
                    }
                }
                stage('TESTING IN MAC MACHINE') {
                    steps{
                        catchError(buildResult: 'SUCCESS' , stageResult: 'FAILURE') {
                             sh '''
                        echo "This is Testing stage in MAC Machine"
                        '''
                        }
                    }
                }
            }
        }
        stage('DEPLOY') {
            when {
                expression{ params.STAGES == 'DEPLOY'}
                branch 'branch1'
            }
            steps {
                catchError(buildResult: 'SUCCESS' , stageResult: 'FAILURE') {
                    sh '''
                    echo "This is DEPLOY Stage"
                    '''
                }
            }
        }
    }
        post{
        always {
            echo "This will print always"
        }
        success{
            echo "The BUILD_ID $BUILD_ID is Success"
        }
        unstable{
            echo "The BUILD_ID $BUILD_ID is Unstable"
        }
        failure{
            echo "The BUILD_ID $BUILD_ID is Failure"
        }
    }
}